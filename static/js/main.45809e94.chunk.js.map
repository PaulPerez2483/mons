{"version":3,"sources":["components/card/card.js","components/card-list/card.js","components/NoData.js","components/displayComponents.js","components/search-box/Search.js","components/App.js","index.js"],"names":["Card","monster","className","alt","name","src","id","email","CardList","monsters","map","key","NoData","msg","defaultProps","DisplayComponents","filterMonsters","length","Search","search","placeholder","onChange","e","target","value","type","App","handleChange","ev","setState","searchField","state","fetch","then","response","json","data","this","filter","toLowerCase","includes","Component","root","document","getElementById","render"],"mappings":"gSAEaA,G,MAAO,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACC,yBAAKC,UAAU,kBACd,yBACCC,IAAG,kBAAaF,EAAQG,MACxBC,IAAG,+BAA0BJ,EAAQK,GAAlC,4BAEJ,4BAAKL,EAAQG,MACb,2BAAIH,EAAQM,UCNFC,G,MAAW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACC,yBAAKP,UAAU,aACbO,EAASC,KAAI,SAACT,GAAD,OACb,kBAAC,EAAD,CAAMU,IAAKV,EAAQK,GAAIL,QAASA,UCNvBW,EAAS,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACxB,OAAO,6BAAMA,IAGdD,EAAOE,aAAe,CACrBD,IAAK,wBCHC,IAAME,EAAoB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAOnC,OAL2B,IAA1BA,EAAeC,OACd,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAUR,SAAUO,KCPVE,G,MAAS,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,OAAQC,EAAkC,EAAlCA,YAAaJ,EAAqB,EAArBA,eAC7C,OACC,oCACC,gDACA,yBAAKd,UAAU,iBACd,2BACCA,UAAU,SACVmB,SAAU,SAACC,GAAD,OAAOH,EAAOG,EAAEC,OAAOC,QACjCC,KAAK,SACLL,YAAaA,IAEd,6BAAMJ,EAAeC,YCFZS,G,MAAb,kDACC,aAAe,IAAD,8BACb,gBAYDC,aAAe,SAACC,GACf,EAAKC,SAAS,CACbC,YAAaF,KAbd,EAAKG,MAAQ,CACZtB,SAAU,GACVqB,YAAa,IAJD,EADf,gEAQsB,IAAD,OACnBE,MAXU,8CAYRC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAU,EAAKP,SAAS,CAAEpB,SAAU2B,SAX7C,+BAuBW,IAAD,EAC0BC,KAAKN,MAA/BtB,EADA,EACAA,SAAUqB,EADV,EACUA,YAEZd,EAAiBP,EAAS6B,QAAO,SAACrC,GAAD,OACtCA,EAAQG,KAAKmC,cAAcC,SAASV,EAAYS,kBAGjD,OACC,8BACC,kBAAC,EAAD,CACCpB,OAAQkB,KAAKV,aACbP,YAAa,eACbJ,eAAgBA,IAEjB,kBAAC,EAAD,CAAmBA,eAAgBA,SArCvC,GAAyByB,cCPnBC,EAAOC,SAASC,eAAe,QAErCC,iBAAO,kBAAC,EAAD,MAASH,K","file":"static/js/main.45809e94.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./card.css\";\nexport const Card = ({ monster }) => {\n\treturn (\n\t\t<div className='card-container'>\n\t\t\t<img\n\t\t\t\talt={`monster ${monster.name}`}\n\t\t\t\tsrc={`https://robohash.org/${monster.id}?set=set1&size=180x180`}\n\t\t\t/>\n\t\t\t<h2>{monster.name}</h2>\n\t\t\t<p>{monster.email}</p>\n\t\t</div>\n\t);\n};\n","import React from \"react\";\nimport { Card } from \"../card/card.js\";\nimport \"./card.css\";\n\nexport const CardList = ({ monsters }) => {\n\treturn (\n\t\t<div className='card-list'>\n\t\t\t{monsters.map((monster) => (\n\t\t\t\t<Card key={monster.id} monster={monster} />\n\t\t\t))}\n\t\t</div>\n\t);\n};\n","import React from \"react\";\n\nexport const NoData = ({ msg }) => {\n\treturn <div>{msg}</div>;\n};\n\nNoData.defaultProps = {\n\tmsg: \"NO Data To Display--\"\n};\n","import React from \"react\";\nimport { CardList } from \"./card-list/card.js\";\nimport { NoData } from \"./NoData\";\n\nexport const DisplayComponents = ({ filterMonsters }) => {\n\tlet data =\n\t\tfilterMonsters.length === 0 ? (\n\t\t\t<NoData />\n\t\t) : (\n\t\t\t<CardList monsters={filterMonsters} />\n\t\t);\n\treturn data;\n};\n","import React from \"react\";\nimport \"./search.css\";\nexport const Search = ({ search, placeholder, filterMonsters }) => {\n\treturn (\n\t\t<>\n\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t<div className='search-holder'>\n\t\t\t\t<input\n\t\t\t\t\tclassName='search'\n\t\t\t\t\tonChange={(e) => search(e.target.value)}\n\t\t\t\t\ttype='search'\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t/>\n\t\t\t\t<div>{filterMonsters.length}</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n","import React, { Component } from \"react\";\nimport { DisplayComponents } from \"./displayComponents\";\nimport { Search } from \"../components/search-box/Search\";\nimport \"./app.css\";\n// NOTES:\n// thinking in JSX:\n// anytime the user changes the state - the page re-renders\n// lifting state up - when state is in the root of the\n\nconst URL = \"https://jsonplaceholder.typicode.com/users\";\n\nexport class App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tmonsters: [],\n\t\t\tsearchField: \"\"\n\t\t};\n\t}\n\tcomponentDidMount() {\n\t\tfetch(URL)\n\t\t\t.then((response) => response.json())\n\t\t\t.then((data) => this.setState({ monsters: data }));\n\t}\n\n\thandleChange = (ev) => {\n\t\tthis.setState({\n\t\t\tsearchField: ev\n\t\t});\n\t\t/*\n\t\tsetState takes a callback function as a second argument : which run after set state is finished.\n\t\t*/\n\t};\n\n\trender() {\n\t\tconst { monsters, searchField } = this.state;\n\n\t\tconst filterMonsters = monsters.filter((monster) =>\n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n\t\treturn (\n\t\t\t<main>\n\t\t\t\t<Search\n\t\t\t\t\tsearch={this.handleChange}\n\t\t\t\t\tplaceholder={\"find monster\"}\n\t\t\t\t\tfilterMonsters={filterMonsters}\n\t\t\t\t/>\n\t\t\t\t<DisplayComponents filterMonsters={filterMonsters} />\n\t\t\t</main>\n\t\t);\n\t}\n}\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { App } from \"./components/App\";\n\nconst root = document.getElementById(\"root\");\n\nrender(<App />, root);\n"],"sourceRoot":""}